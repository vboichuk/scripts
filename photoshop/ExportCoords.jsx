// Written by Valentina Boichuk/*Данный скрипт предназначен для экспорта координат, размеров и центров трансформации (т.е. anchor point)слоев фотошопа.Примечание: Для вложенных слоев данные параметры не вычисляются.Координаты экспортируются в текстовый файл, который будет сохранен в директории, где находится psd-файл.Координаты записываются дважды - posCC - координаты центра слояposCB - координаты низа центра слояПример:---my_layer_nameposCC:  {-91,-292.75}posCB:  {-91,-368}size: {88,150.5}---Если какой-либо спрайт должен иметь иной центр трансформации,чем "центр" либо центр-низ", необходимо сделать следующее:1. создать новую группу и поместить в нее данный слой2. для лучшего визуального восприятия результатов - имя группы должно совпадать с именем слоя.3. в данной группе создать новый пустой слой с именем "anchor"и переместить его в самый верх группы (!)4. на слое anchor любым инструментом закрасить 1 пиксел,который будет соответсвтовать центру трансформации нужного нам спрайта.Примечание: центр трансформации не должен выходить за bounding box нашего спрайта.При правильном выполнении вышеописанных инструкций получим на выходе:----my_other_layer_nameanchor:   {0.99839743589744,0.14}position: {-167.5,14}size: {312,75}----Все координаты и размеры переводятся из системы координат фотошопа в кастомную систему координат (с центром в центре экрана и осью Y, направленной вверх).*/#target photoshopapp.bringToFront();/////////////////////////// SETUP/////////////////////////app.preferences.rulerUnits = Units.PIXELS;// Преобразование координат фотошопа в координаты приложения// Ось y направлена снизу вверхfunction transform(point) {		point.x = point.x          - startCoordsX;	point.y = (docH - point.y) - startCoordsY;
}function scale(point) {		var k = 1.0;	point.x = point.x / k;	point.y = point.y / k;}function calculatePosition (pOrigin, pSize, pAnchor) {	return {		x: pOrigin.x + pSize.x * pAnchor.x, 		y: pOrigin.y + pSize.y * pAnchor.y 	}}function writeLayerInfo(layer, outTxtFile) {		outTxtFile.writeln("==============================");	outTxtFile.writeln(layer.name.replace(".png", ""));		var pOrigin = {		x: layer.bounds[0].value,		y: layer.bounds[1].value	}		var x2 = layer.bounds[2].value;	var y2 = layer.bounds[3].value;		var pSize = { 		x: x2 - pOrigin.x, 		y: y2 - pOrigin.y 	};		// Если это группа, и она содержит слой-маркер "anchor", то вычисляем anchorPoint	if (layer.typename == "LayerSet" && layer.artLayers.length > 0 && layer.artLayers[0].name == "anchor") {				var anchorLayer = layer.artLayers[0];				var an = {			x: anchorLayer.bounds[0].value,			y: anchorLayer.bounds[1].value		}		var ax = (an.x - pOrigin.x) / (x2 - pOrigin.x);		var ay = 1 - (an.y - pOrigin.y) / (y2 - pOrigin.y);				outTxtFile.writeln("anchor:   {" + ax + "," + ay + "}");				transform(an);		scale(an);		outTxtFile.writeln("position: {" + an.x + "," + an.y + "}");	}	else {		var pAnchor = {x: 0.5, y: 0.5};		var pPosition = calculatePosition(pOrigin, pSize, pAnchor);			transform(pPosition);		scale(pPosition);			outTxtFile.writeln("posCC:  {" + pPosition.x + "," + pPosition.y + "}");			pAnchor = {x: 0.5, y: 1};		pPosition = calculatePosition(pOrigin, pSize, pAnchor);			transform(pPosition);		scale(pPosition);		outTxtFile.writeln("posCB:  {" + pPosition.x + "," + pPosition.y + "}");
	}		scale(pSize);	outTxtFile.writeln("size: {" + pSize.x + "," + pSize.y + "}");	outTxtFile.writeln("");
}function writeCoordsToFile(filepath) {		var outTxtFile = new File(filepath);	if (outTxtFile.exists)		outTxtFile.remove();	outTxtFile.encoding = "UTF8";	outTxtFile.open("e", "TEXT", "????");	for (var i = 0; i < doc.layers.length; i++) {		var layer = doc.layers[i];		writeLayerInfo(layer, outTxtFile);	}	outTxtFile.close();}/////////////////////////// MAIN/////////////////////////var doc = app.activeDocument;var docW = doc.width.value;var docH = doc.height.value;var psdname = doc.name.replace(".psd", "")// Начало координат - Centervar startCoordsX = 0.5 * docW;var startCoordsY = 0.5 * docH;writeCoordsToFile(doc.path + "/" + psdname + "_coords_relatively_center.txt");// Начало координат - Center Bottom (При желании)// var startCoordsX = 0.5 * docW;// var startCoordsY = 0   * docH;// writeCoordsToFile(doc.path + "/" + psdname + "_coords_relatively_center_bottom.txt");